.. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.
   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide_addons.html
   This text does not appear on pypi or github. It is a comment.

.. image:: https://secure.travis-ci.org/collective/collective.contentalerts.png?branch=master
    :target: http://travis-ci.org/collective/collective.contentalerts
    :alt: Travis

.. image:: https://coveralls.io/repos/collective/collective.contentalerts/badge.svg?branch=master&service=github
    :target: https://coveralls.io/github/collective/collective.contentalerts?branch=master
    :alt: Coveralls

========================
collective.contentalerts
========================
Get alerts whenever a (custom list of) word is found on a content object,
be that object any content type (Dexterity or Archetypes).

Can be used to:

- moderate: used as a blacklist.
- highlight: used as a whitelist.

The basic idea is to use the power of `plone.app.contentrules`_ to inspect
content being generated by users for certain words.

Upon that, regular `plone.app.contentrules`_ actions can be triggered:
send an email, notify the user...

Features
--------
- manage a list of words that will be used to search (blacklist/whitelist)
- integration with  `plone.app.contentrules`_:

  - a condition to look for stop words
  - string substitutions to add on emails the snippets where the stop words
    where found (one for documents and one for comments)

- standalone utility
- provide different word lists if you need them,
  either a general one (plone.registry based) or on a per contentrule basis
- look for stop words on comments, dexterity and archetypes content types
- apply a marker interface to objects that are found to have stop words

Where it searches on
--------------------
collective.contentalerts searches either on the comments' text,
on ``getText()`` (for Archetypes based content types) or
on ``text`` (for Dexterity based content types).

Standalone usage
----------------
While the main integration within Plone is via a p.a.contentrules condition,
``collective.contentalerts`` can also be used as a standalone utility.

Just get the utility (``collective.contentalerts.interfaces.IAlert``) and use
the provided methods.

Examples
--------
This add-on can be seen in action at the following sites:

- *Still not*

Documentation
-------------
Full documentation for end users can be found in the "docs" folder.

Translations
------------
This product has been translated into:

- *Still not*

Installation
------------
Install collective.contentalerts by adding it to your buildout::

   [buildout]

    ...

    eggs =
        collective.contentalerts


and then running "bin/buildout"

Contribute
----------
- Issue Tracker: https://github.com/collective/collective.contentalerts/issues
- Source Code: https://github.com/collective/collective.contentalerts

Support
-------
If you are having issues, please let us know.

License
-------
The project is licensed under the GPLv2.

Credits
-------

`der Freitag`_ sponsored the creation of this add-on.


.. _plone.app.contentrules:  https://pypi.python.org/pypi/plone.app.contentrules
.. _der Freitag:  https://www.freitag.de
